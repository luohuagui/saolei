import processing.serial.*;
PFont myFont;
Serial myPort;
ArrayList myBall;
int re=0, x=0, nu=0;
int gr =0, hf, zs;
int bl =0, h=0;
int[][] vadjloc;
int[] loc = new int[3];
float dst[] = new float[50];
void setup() {
  size(800, 720);
  background(120);
  myFont = createFont("微软雅黑", 50);
  myPort = new Serial(this, "COM3", 9600);
  myPort.bufferUntil('\n');
  vadjloc = new int[50][2];
  myBall = new ArrayList();
  xxzi();
  bzjy();
  vadj();
}


void draw() {

  
  noStroke();
  rect(684.5, 0, 115, 720);
  fill(255);
  textSize(24);
  text("time:\n"+ millis()/1000, 730, 100);
  fill(120);
   for (int i = 0; i < myBall.size(); i ++) {
    Ball oneBall = (Ball)myBall.get(i);
    oneBall.run();
  }
  display();
}


void xxzi() {
  textFont(myFont);
  textSize(20);
  fill(134, 32, 245);
  text("A", 323, 323);
  text("B", 323, 361);
  text("D", 361, 323);
  text("C", 361, 361);
  //String[] ll =split(num,",");
  // xuhk = int(ll);
  for (int i = 0; i<10; i++) {
    fill(255);
    textSize(22);
    text(i, 38*i-19, 342);
    text(i, 342, 38*i-19);
    text(i, 684+19-38*i, 342);
    text(i, 342, 684+19-38*i);
  }
}


void bzjy() {
  strokeWeight(1);
  stroke(0);
  for (int i = 0; i<=18; i++) {
    line(38*i, 0, 38*i, 684);
  }
  strokeWeight(1);
  stroke(0);
  for (int j =0; j<=18; j++) {
    line(0, 38*j, 684, 38*j);
  }
  strokeWeight(2);
  stroke(255, 0, 0);
  line(342, 0, 342, 684);
  strokeWeight(2);
  stroke(255, 0, 0);
  line(0, 342, 684, 342);
}


void serialEvent(Serial p) {

  //  for ( x =0; x<3; x++) {

  String inString = p.readString();
  String[] list = split(inString, ',');
   PVector ms = new PVector(random(690,790), random(20,500));
  Ball thisBall = new Ball(ms, random(3,5), (int)random(255),(int)random(255),(int)random(255));
  myBall.add(thisBall);
  int t;
  if (list[0].equals("A")) {
    t =10;
  } else if (list[0].equals("B")) {
    t=11;
  } else if (list[0].equals("C")) {
    t=12;
  } else if (list[0].equals("D")) {
    t=13;
  } else if (list[0].equals("#")) {
    t=14;
  } else if (list[0].equals("0")) {
    t=15;
  } else if (list[0].equals("*")) {
    t=16;
  } else {
    t=int(list[0]);
  }
  re = int(list[1]);
  gr = int(list[2]);
  bl = int(list[3]);
  loc[x] = t;
  x=x+1;
  while (x==3) {
    if (loc[0]==10) { 
      hf= int(loc[1]-1)*38;
      zs=int(loc[2]-1)*38;
    } else if (loc[0]==11) {
      hf = int(loc[1]-1)*38;
      zs =646-( int(loc[2]-1)*38);
    } else if (loc[0]==12) {
      hf=646-(int(loc[1]-1)*38);
      zs=646-(int(loc[2]-1)*38);
    } else if (loc[0]==13) {
      hf=646-(int(loc[1]-1)*38);
      zs=int(loc[2]-1)*38;
    }
    //else if(loc[0]==14){}
    else {
      hf=0;
      zs=0;
    }

    println(hf, "   ", zs);
    x = 0;
  }
 
}


void display() {
  nu = 0;
  h=0;
  for (int i=0; i<50; i++) {
    dst[i] = dist(hf+19, zs+19, vadjloc[i][0]*38+19, vadjloc[i][1]*38+19);
    if (dst[i]>10&&dst[i]<=60) {
      nu = nu+1;
    } else if (dst[i]>=0&&dst[i]<=10) {
      h = 1;
    } else {
    }

    if (h==1) {
      fill(235, 0, 0);
      noStroke();
      ellipse(hf+19, zs+19, 15, 15);
    } else { 
      fill(220);
      noStroke();
      rect(hf, zs, 38, 38);

      textFont(myFont);
      textSize(26);
      textAlign(CENTER, CENTER);
      fill(re, gr, bl);
      text(nu, hf+19, zs+19);
    }
  }
}


void vadj() {
  for (int i=0; i<50; i++) {
    vadjloc[i][0] =(int)random(17);
    vadjloc[i][1]=(int)random(17);

    fill(120);
    noStroke();
    ellipse(vadjloc[i][0]*38+19, vadjloc[i][1]*38+19, 15, 15);
  }
}









